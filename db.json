{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/wechat_qrcode.jpg","path":"img/wechat_qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/greywind_avatar.png","path":"img/greywind_avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/background.png","path":"img/background.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1694138908014},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1694138936581},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1694138941493},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1694138941503},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1694138941492},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1694138941503},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1694138941503},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1694138941504},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1694138941504},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1694138941504},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1694138941505},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1694138941505},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1694138941506},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1694138941506},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1694138941507},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1694138941505},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1694138941507},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1694138941506},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1694138941507},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1694138941508},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1694138941508},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1694138941508},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1694138941509},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1694138941509},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1694138941510},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1694138941509},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1694138941511},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1694138941510},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1694138941513},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1694138941512},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1694138941511},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1694138941512},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1694138941513},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1694138941514},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1694138941515},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1694138936584},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1694138936586},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1694138936589},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1694138941514},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1694138936589},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1694138936590},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1694138941514},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1694138936590},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1694138940835},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1694138936592},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1694138936591},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1694138936592},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1694138936586},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1694138936583},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1694138936592},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1694138936583},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1694138936585},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1694138936587},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1694138936586},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1694138936587},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1694138936588},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1694138936584},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1694138936589},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1694138936588},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1694138936583},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1694138936591},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1694138941494},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1694138936582},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1694138941492},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1694138941494},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1694138941502},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1694138936585},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1694138936587},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1694138936591},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1694138936592},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1694138941495},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1694138936590},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1694138936586},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1694138941496},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1694138941497},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1694138941497},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1694138941499},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1694138941499},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1694138941500},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1694138941501},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1694138941502},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1694138941501},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1694138941498},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1694138941500},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1694138940933},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1694138941490},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1694138940833},{"_id":"public/2023/09/08/hello-world/index.html","hash":"7ddf1c280a9359a5fd2fa1dc25a1a6b2265ae02a","modified":1694144476669},{"_id":"public/archives/index.html","hash":"90d6c59d718a50e5cdad18209791e29e774a4ea3","modified":1694339473122},{"_id":"public/archives/2023/09/index.html","hash":"145f7f4ab8d10795e9f766f9720cda12bb3ae3dd","modified":1694339473122},{"_id":"public/index.html","hash":"8c59378254fb903f289fc0deaab6aba6e7e9099b","modified":1694339473122},{"_id":"public/archives/2023/index.html","hash":"90b1f1d2559162ce4526cabc3c8180051461b2a2","modified":1694339473122},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1694139003446},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1694139003446},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1694139003446},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1694139003446},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1694139003446},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1694139003446},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1688287284000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1688287284000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1688287284000},{"_id":"themes/fluid/README_en.md","hash":"49541d4ec48c4b517c5b3fe17a2e92d87090d007","modified":1688287284000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1688287284000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1688287284000},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1688287284000},{"_id":"themes/fluid/package.json","hash":"41983970c0977b3c626c3f1e3c714cf78ac6a04e","modified":1688287284000},{"_id":"themes/fluid/_config.yml","hash":"f830484594eab1b70632c086f5ac8360a0cc3e80","modified":1694150149096},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1688287284000},{"_id":"themes/fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1688287284000},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1688287284000},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1688287284000},{"_id":"themes/fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1688287284000},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1688287284000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"ff682cdd587cf5346bf0486943575d7121bab85a","modified":1694140539711},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1688287284000},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1688287284000},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1688287284000},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1688287284000},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1688287284000},{"_id":"themes/fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1688287284000},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1688287284000},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1688287284000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1688287284000},{"_id":"themes/fluid/layout/index.ejs","hash":"9b4c154462ce78de4c9ea7dd15dce4ca8e8c1cf8","modified":1688287284000},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1688287284000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1688287284000},{"_id":"themes/fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1688287284000},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"c8b0d49c49e3c88872fd3b37909345ff5b2b6aa0","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1688287284000},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"554c0d0e086a0784d83ee71c83f8bceeb60aecc8","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"fff07ce0472afc368d388637cb9d438195da9b5b","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1688287284000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1688287284000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1688287284000},{"_id":"themes/fluid/.github/workflows/publish.yaml","hash":"6f02e6440d88629229556e3fd47d0280fe2240db","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1688287284000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1688287284000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1688287284000},{"_id":"themes/fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1688287284000},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1688287284000},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1688287284000},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1688287284000},{"_id":"themes/fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1688287284000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1688287284000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1688287284000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":1688287284000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1688287284000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1688287284000},{"_id":"themes/fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1688287284000},{"_id":"themes/fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1688287284000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1688287284000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1688287284000},{"_id":"themes/fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1688287284000},{"_id":"themes/fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1688287284000},{"_id":"themes/fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1688287284000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1688287284000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1688287284000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1688287284000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1688287284000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1688287284000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1688287284000},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"b2f61b91fffb17d11ad56811f07d52d23f012741","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"8d3ae1ec6660fbb0e563bc08c2f8deefde1f3bf6","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1688287284000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1688287284000},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"e413212e5a667d5b8299c4d2a39c4dfa1378d119","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1688287284000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1688287284000},{"_id":"themes/fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1688287284000},{"_id":"public/local-search.xml","hash":"22c388a916ffaf800dcb62b8202e1fb1b91186e4","modified":1694339473122},{"_id":"public/404.html","hash":"78376c42c80c91a1cd342631504b9736049f5ad0","modified":1694150173543},{"_id":"public/tags/index.html","hash":"0ed6788647837b279d0408904d1c5f848b4d05f7","modified":1694265852648},{"_id":"public/categories/index.html","hash":"ae180dd4281001eccd7c07f323693896ca8a60a7","modified":1694339473122},{"_id":"public/links/index.html","hash":"88dc2ae72de11fcb35d84b6b968ff34be8c68589","modified":1694150173543},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1694139654662},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1694139654662},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1694139654662},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1694139654662},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1694139654662},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1694139654662},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1694139654662},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1694139654662},{"_id":"public/css/main.css","hash":"526a4522eb54bb51772f51fb98295dc4fe03429f","modified":1694139654662},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1694139654662},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1694139654662},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1694139654662},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1694139654662},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1694139654662},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1694139654662},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1694139654662},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1694139654662},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1694139654662},{"_id":"source/about/index.md","hash":"7b2588f6dda1346698f949a88ba44b83f6d4756a","modified":1694140687227},{"_id":"themes/fluid/source/img/wechat_qrcode.jpg","hash":"51738de396fd8396c8f516443dea460ae9b93272","modified":1694141335870},{"_id":"themes/fluid/source/img/greywind_avatar.png","hash":"3ce40793abab7f80a4eab98b39b7ca220d7f7644","modified":1694141417693},{"_id":"themes/fluid/source/img/background.png","hash":"98f0b9dfc2e89be2725564103a08ddc7f799bc5d","modified":1694149242901},{"_id":"source/_posts/针对九龙冰室的预制菜行为的反馈.md","hash":"43cdcc4af2302fd766c75b2026a6b7b5c97b0de4","modified":1694145693171},{"_id":"public/about/index.html","hash":"0ecdf731055ddd4a5c75a7b1e271667f1e158eb1","modified":1694150173543},{"_id":"public/2023/09/08/针对九龙冰室的预制菜行为的反馈/index.html","hash":"62519356d6378751face732ef83ad01f4694815f","modified":1694150173543},{"_id":"public/img/greywind_avatar.png","hash":"3ce40793abab7f80a4eab98b39b7ca220d7f7644","modified":1694144476669},{"_id":"public/img/wechat_qrcode.jpg","hash":"51738de396fd8396c8f516443dea460ae9b93272","modified":1694144476669},{"_id":"public/img/background.png","hash":"e2f7892f4bfc4e66bbd65d434a731573df757cfc","modified":1694144476669},{"_id":"source/公告/index.md","hash":"a87b323ed28496fffcb82d45645604bcfe2de5e2","modified":1694145599346},{"_id":"public/公告/index.html","hash":"96d0cbbc8515685ca0edebad039f3ff76de30c7d","modified":1694150173543},{"_id":"public/categories/公告/index.html","hash":"4b01f2c7a150f02d341e56da39b7426a2e38506b","modified":1694150173543},{"_id":"public/tags/餐饮/index.html","hash":"993ad8acf588210eaf2d6e102e81c9efad0bba1b","modified":1694150173543},{"_id":"source/_posts/Visual-Basic调用Shell.md","hash":"a384c7720d06905931a10dea0ef60f1502950e79","modified":1694264981292},{"_id":"public/tags/编程/index.html","hash":"8f7ae731327414e0289e7f34003e12876ecf346c","modified":1694339473122},{"_id":"public/categories/各语言执行Shell/index.html","hash":"1c259f1b7c986b9fa957e873314ad145e1be0e63","modified":1694339473122},{"_id":"public/2023/09/09/Visual-Basic调用Shell/index.html","hash":"2001308b728bbeb7c85396eb0095b1b510ebd53f","modified":1694264987681},{"_id":"source/_posts/C执行Shell.md","hash":"489af10294929c47e37ffb56aa637ef39507e6dc","modified":1694265807682},{"_id":"public/2023/09/09/C执行Shell/index.html","hash":"fbfdc09d7687c1f0e8cd8d2b2a7a21f249755ca4","modified":1694265852648},{"_id":"source/_posts/C++执行Shell.md","hash":"300d44a1658a9fc6f8318a51b3e15e9a4a586f3f","modified":1694266170786},{"_id":"public/2023/09/09/C++执行Shell/index.html","hash":"d33fbec1d5474c3581754e0ceb01fc7c1bbcbf4e","modified":1694266191342},{"_id":"source/_posts/Rust执行Shell.md","hash":"1b4b01fc2b32f0281bdcc4fee6efd28a9b8d15b9","modified":1694338862644},{"_id":"public/2023/09/10/Rust执行Shell/index.html","hash":"328ce8f07e094a884b8e4c1e520c76e84d6ded8f","modified":1694338890850},{"_id":"source/_posts/C#执行Shell.md","hash":"f5d0885bc27df3fb8c2082059e069e9890b8096a","modified":1694339465194},{"_id":"public/2023/09/10/C#执行Shell/index.html","hash":"a6f2467bfa882e3b22d0f88fcea17fb0dbc90539","modified":1694339473122}],"Category":[{"name":"公告","_id":"clma2lvt80000jk5gf9lg3c1i"},{"name":"各语言执行Shell","_id":"clmc1mnfh0001jk5g20xt7b9r"}],"Data":[],"Page":[{"title":"about","layout":"about","date":"2023-09-08T02:36:43.000Z","_content":"\n# 关于\n\n青衣小说网、Sunrise Studio的公告页面\n","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\ndate: 2023-09-08 10:36:43\n---\n\n# 关于\n\n青衣小说网、Sunrise Studio的公告页面\n","updated":"2023-09-08T02:38:07.227Z","path":"about/index.html","comments":1,"_id":"clm9zmojg0000z45ghr8idlpv","content":"<h1 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h1><p>青衣小说网、Sunrise Studio的公告页面</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于\"><a href=\"#关于\" class=\"headerlink\" title=\"关于\"></a>关于</h1><p>青衣小说网、Sunrise Studio的公告页面</p>\n"}],"Post":[{"title":"针对九龙冰室的预制菜行为的反馈","date":"2023-09-08T03:29:22.000Z","_content":"\n# 针对九龙冰室不负责任的预制菜行为的回应\n\n本人(即灰风，不方便透露名字)在2023年8月31日中午十二点左右于上海市长宁区南丰城B1九龙冰室就餐，共消费62元，购买了一份鸡扒饭与灯胆奶茶。\n\n在鸡扒饭上桌后，我尝了一下，边缘的米饭是凉的，我误以为是边缘处凉的较快，在之后我吃到里面的饭也是凉的，我感到十分不可思议。\n\n在饭点，作为一家连锁粤菜餐厅，竟然上了一盘预制菜给我，这令我十分不解与震撼。当然，鸡扒饭里的肉和蛋都是当天现做，不过对于米饭预制这件事我由于当日下午还有其它事务没有与服务员过多纠缠，让他们热好就结账走了，九龙冰室服务员将他们灯胆奶茶的杯子赠与我以示歉意，我当时接受了，但我认为这是封口费。\n\n事件讲述完毕，对此，我的回应是从2023年九月开始，本人以及所有工作室成员不会再前往九龙冰室，同时，也会与周边人士通知此事，祝你们品牌关门大吉！\n","source":"_posts/针对九龙冰室的预制菜行为的反馈.md","raw":"---\ntitle: 针对九龙冰室的预制菜行为的反馈\ndate: 2023-09-08 11:29:22\ncategories:\n- 公告\ntags:\n- 餐饮\n---\n\n# 针对九龙冰室不负责任的预制菜行为的回应\n\n本人(即灰风，不方便透露名字)在2023年8月31日中午十二点左右于上海市长宁区南丰城B1九龙冰室就餐，共消费62元，购买了一份鸡扒饭与灯胆奶茶。\n\n在鸡扒饭上桌后，我尝了一下，边缘的米饭是凉的，我误以为是边缘处凉的较快，在之后我吃到里面的饭也是凉的，我感到十分不可思议。\n\n在饭点，作为一家连锁粤菜餐厅，竟然上了一盘预制菜给我，这令我十分不解与震撼。当然，鸡扒饭里的肉和蛋都是当天现做，不过对于米饭预制这件事我由于当日下午还有其它事务没有与服务员过多纠缠，让他们热好就结账走了，九龙冰室服务员将他们灯胆奶茶的杯子赠与我以示歉意，我当时接受了，但我认为这是封口费。\n\n事件讲述完毕，对此，我的回应是从2023年九月开始，本人以及所有工作室成员不会再前往九龙冰室，同时，也会与周边人士通知此事，祝你们品牌关门大吉！\n","slug":"针对九龙冰室的预制菜行为的反馈","published":1,"updated":"2023-09-08T04:01:33.171Z","_id":"clma1hhtg0000qk5g6pq5amt7","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"针对九龙冰室不负责任的预制菜行为的回应\"><a href=\"#针对九龙冰室不负责任的预制菜行为的回应\" class=\"headerlink\" title=\"针对九龙冰室不负责任的预制菜行为的回应\"></a>针对九龙冰室不负责任的预制菜行为的回应</h1><p>本人(即灰风，不方便透露名字)在2023年8月31日中午十二点左右于上海市长宁区南丰城B1九龙冰室就餐，共消费62元，购买了一份鸡扒饭与灯胆奶茶。</p>\n<p>在鸡扒饭上桌后，我尝了一下，边缘的米饭是凉的，我误以为是边缘处凉的较快，在之后我吃到里面的饭也是凉的，我感到十分不可思议。</p>\n<p>在饭点，作为一家连锁粤菜餐厅，竟然上了一盘预制菜给我，这令我十分不解与震撼。当然，鸡扒饭里的肉和蛋都是当天现做，不过对于米饭预制这件事我由于当日下午还有其它事务没有与服务员过多纠缠，让他们热好就结账走了，九龙冰室服务员将他们灯胆奶茶的杯子赠与我以示歉意，我当时接受了，但我认为这是封口费。</p>\n<p>事件讲述完毕，对此，我的回应是从2023年九月开始，本人以及所有工作室成员不会再前往九龙冰室，同时，也会与周边人士通知此事，祝你们品牌关门大吉！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"针对九龙冰室不负责任的预制菜行为的回应\"><a href=\"#针对九龙冰室不负责任的预制菜行为的回应\" class=\"headerlink\" title=\"针对九龙冰室不负责任的预制菜行为的回应\"></a>针对九龙冰室不负责任的预制菜行为的回应</h1><p>本人(即灰风，不方便透露名字)在2023年8月31日中午十二点左右于上海市长宁区南丰城B1九龙冰室就餐，共消费62元，购买了一份鸡扒饭与灯胆奶茶。</p>\n<p>在鸡扒饭上桌后，我尝了一下，边缘的米饭是凉的，我误以为是边缘处凉的较快，在之后我吃到里面的饭也是凉的，我感到十分不可思议。</p>\n<p>在饭点，作为一家连锁粤菜餐厅，竟然上了一盘预制菜给我，这令我十分不解与震撼。当然，鸡扒饭里的肉和蛋都是当天现做，不过对于米饭预制这件事我由于当日下午还有其它事务没有与服务员过多纠缠，让他们热好就结账走了，九龙冰室服务员将他们灯胆奶茶的杯子赠与我以示歉意，我当时接受了，但我认为这是封口费。</p>\n<p>事件讲述完毕，对此，我的回应是从2023年九月开始，本人以及所有工作室成员不会再前往九龙冰室，同时，也会与周边人士通知此事，祝你们品牌关门大吉！</p>\n"},{"title":"Visual Basic调用Shell","date":"2023-09-09T11:39:11.000Z","_content":"\n# Visual Basic调用Shell\n\n使用Visual Studio创建一个Visual Basic项目，本文以控制台项目演示。\n\n输入以下代码\n\n```visual basic\nModule Module1\n\n    Sub Main()\n        Shell(\"cmd.exe /c echo 1&&pause\")\n    End Sub\n\nEnd Module\n```\n\nVisual Studio可能自动生成了除shell以外的代码。\n\n调整执行命令只需修改本代码段“echo 1”与“pause”即可。\n\n------\n\n当然，以下是一个在 Windows 平台更好的方法。\n\n代码如下：\n\n```visual basic\nDim command As String\ncommand = \"dir\"\n\nDim shell As Object\nSet shell = CreateObject(\"WScript.Shell\")\n\nDim exec As Object\nSet exec = shell.Exec(\"cmd /c \" & command)\n\nDo While exec.Status = 0\n    WScript.Sleep 100\nLoop\n\nDim output As String\noutput = exec.StdOut.ReadAll\n\nWScript.Echo output\n```\n\n这段示例代码将执行 dir 命令，并在控制台输出命令的结果。你可以将需要执行的命令赋值给 command 变量。\n\n本代码使用了 Windows Script Host 对象模型，通过 CreateObject() 函数创建了一个 WScript.Shell 对象，并调用其 Exec() 方法来执行 cmd 命令。Exec() 方法返回一个 WshScriptExec 对象，该对象的 Status 属性表示当前命令执行状态，StdOut 属性是一个 TextStream 对象，可以读取命令的输出结果。\n","source":"_posts/Visual-Basic调用Shell.md","raw":"---\ntitle: Visual Basic调用Shell\ndate: 2023-09-09 19:39:11\ncategories:\n- 各语言执行Shell\ntags:\n- 编程\n---\n\n# Visual Basic调用Shell\n\n使用Visual Studio创建一个Visual Basic项目，本文以控制台项目演示。\n\n输入以下代码\n\n```visual basic\nModule Module1\n\n    Sub Main()\n        Shell(\"cmd.exe /c echo 1&&pause\")\n    End Sub\n\nEnd Module\n```\n\nVisual Studio可能自动生成了除shell以外的代码。\n\n调整执行命令只需修改本代码段“echo 1”与“pause”即可。\n\n------\n\n当然，以下是一个在 Windows 平台更好的方法。\n\n代码如下：\n\n```visual basic\nDim command As String\ncommand = \"dir\"\n\nDim shell As Object\nSet shell = CreateObject(\"WScript.Shell\")\n\nDim exec As Object\nSet exec = shell.Exec(\"cmd /c \" & command)\n\nDo While exec.Status = 0\n    WScript.Sleep 100\nLoop\n\nDim output As String\noutput = exec.StdOut.ReadAll\n\nWScript.Echo output\n```\n\n这段示例代码将执行 dir 命令，并在控制台输出命令的结果。你可以将需要执行的命令赋值给 command 变量。\n\n本代码使用了 Windows Script Host 对象模型，通过 CreateObject() 函数创建了一个 WScript.Shell 对象，并调用其 Exec() 方法来执行 cmd 命令。Exec() 方法返回一个 WshScriptExec 对象，该对象的 Status 属性表示当前命令执行状态，StdOut 属性是一个 TextStream 对象，可以读取命令的输出结果。\n","slug":"Visual-Basic调用Shell","published":1,"updated":"2023-09-09T13:09:41.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmc1mnfd0000jk5g9x270cvu","content":"<h1 id=\"Visual-Basic调用Shell\"><a href=\"#Visual-Basic调用Shell\" class=\"headerlink\" title=\"Visual Basic调用Shell\"></a>Visual Basic调用Shell</h1><p>使用Visual Studio创建一个Visual Basic项目，本文以控制台项目演示。</p>\n<p>输入以下代码</p>\n<figure class=\"highlight plaintext\"><figcaption><span>basic</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs visual\">Module Module1<br><br>    Sub Main()<br>        Shell(&quot;cmd.exe /c echo 1&amp;&amp;pause&quot;)<br>    End Sub<br><br>End Module<br></code></pre></td></tr></table></figure>\n\n<p>Visual Studio可能自动生成了除shell以外的代码。</p>\n<p>调整执行命令只需修改本代码段“echo 1”与“pause”即可。</p>\n<hr>\n<p>当然，以下是一个在 Windows 平台更好的方法。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>basic</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs visual\">Dim command As String<br>command = &quot;dir&quot;<br><br>Dim shell As Object<br>Set shell = CreateObject(&quot;WScript.Shell&quot;)<br><br>Dim exec As Object<br>Set exec = shell.Exec(&quot;cmd /c &quot; &amp; command)<br><br>Do While exec.Status = 0<br>    WScript.Sleep 100<br>Loop<br><br>Dim output As String<br>output = exec.StdOut.ReadAll<br><br>WScript.Echo output<br></code></pre></td></tr></table></figure>\n\n<p>这段示例代码将执行 dir 命令，并在控制台输出命令的结果。你可以将需要执行的命令赋值给 command 变量。</p>\n<p>本代码使用了 Windows Script Host 对象模型，通过 CreateObject() 函数创建了一个 WScript.Shell 对象，并调用其 Exec() 方法来执行 cmd 命令。Exec() 方法返回一个 WshScriptExec 对象，该对象的 Status 属性表示当前命令执行状态，StdOut 属性是一个 TextStream 对象，可以读取命令的输出结果。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Visual-Basic调用Shell\"><a href=\"#Visual-Basic调用Shell\" class=\"headerlink\" title=\"Visual Basic调用Shell\"></a>Visual Basic调用Shell</h1><p>使用Visual Studio创建一个Visual Basic项目，本文以控制台项目演示。</p>\n<p>输入以下代码</p>\n<figure class=\"highlight plaintext\"><figcaption><span>basic</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs visual\">Module Module1<br><br>    Sub Main()<br>        Shell(&quot;cmd.exe /c echo 1&amp;&amp;pause&quot;)<br>    End Sub<br><br>End Module<br></code></pre></td></tr></table></figure>\n\n<p>Visual Studio可能自动生成了除shell以外的代码。</p>\n<p>调整执行命令只需修改本代码段“echo 1”与“pause”即可。</p>\n<hr>\n<p>当然，以下是一个在 Windows 平台更好的方法。</p>\n<p>代码如下：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>basic</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs visual\">Dim command As String<br>command = &quot;dir&quot;<br><br>Dim shell As Object<br>Set shell = CreateObject(&quot;WScript.Shell&quot;)<br><br>Dim exec As Object<br>Set exec = shell.Exec(&quot;cmd /c &quot; &amp; command)<br><br>Do While exec.Status = 0<br>    WScript.Sleep 100<br>Loop<br><br>Dim output As String<br>output = exec.StdOut.ReadAll<br><br>WScript.Echo output<br></code></pre></td></tr></table></figure>\n\n<p>这段示例代码将执行 dir 命令，并在控制台输出命令的结果。你可以将需要执行的命令赋值给 command 变量。</p>\n<p>本代码使用了 Windows Script Host 对象模型，通过 CreateObject() 函数创建了一个 WScript.Shell 对象，并调用其 Exec() 方法来执行 cmd 命令。Exec() 方法返回一个 WshScriptExec 对象，该对象的 Status 属性表示当前命令执行状态，StdOut 属性是一个 TextStream 对象，可以读取命令的输出结果。</p>\n"},{"title":"C执行Shell","date":"2023-09-09T13:22:18.000Z","_content":"\n# C执行Shell\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    char command[1000] = \"dir\"; // 将要执行的 cmd 命令\n    FILE *fp = NULL;\n    char res[1024];\n\n    fp = popen(command, \"r\"); // 执行命令，并打开读取管道\n     \n    if (fp == NULL) { // 判断是否成功打开管道\n        printf(\"运行命令失败\\n\");\n        exit(1);\n    }\n     \n    while (fgets(res, sizeof(res), fp) != NULL) { // 从管道中读取输出结果\n        printf(\"%s\", res);\n    }\n    \n    pclose(fp); // 关闭管道\n    return 0;\n\n}\n```\n\n这个示例代码将执行 dir 命令，并输出命令的输出结果。可以替换 command 变量的值为需要执行的命令。\n\n这个实现使用了标准 C 库函数中的 popen() 和 pclose() 函数来执行命令和关闭读取管道。popen() 函数打开一个管道用于读取命令的输出，返回的文件指针 fp 可以用于读取管道中的内容。pclose() 函数关闭读取管道。\n","source":"_posts/C执行Shell.md","raw":"---\ntitle: C执行Shell\ndate: 2023-09-09 21:22:18\ncategories:\n- 各语言执行Shell\ntags:\n- 编程\n---\n\n# C执行Shell\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    char command[1000] = \"dir\"; // 将要执行的 cmd 命令\n    FILE *fp = NULL;\n    char res[1024];\n\n    fp = popen(command, \"r\"); // 执行命令，并打开读取管道\n     \n    if (fp == NULL) { // 判断是否成功打开管道\n        printf(\"运行命令失败\\n\");\n        exit(1);\n    }\n     \n    while (fgets(res, sizeof(res), fp) != NULL) { // 从管道中读取输出结果\n        printf(\"%s\", res);\n    }\n    \n    pclose(fp); // 关闭管道\n    return 0;\n\n}\n```\n\n这个示例代码将执行 dir 命令，并输出命令的输出结果。可以替换 command 变量的值为需要执行的命令。\n\n这个实现使用了标准 C 库函数中的 popen() 和 pclose() 函数来执行命令和关闭读取管道。popen() 函数打开一个管道用于读取命令的输出，返回的文件指针 fp 可以用于读取管道中的内容。pclose() 函数关闭读取管道。\n","slug":"C执行Shell","published":1,"updated":"2023-09-09T13:23:27.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmc256tt00008o5gdr5a87v4","content":"<h1 id=\"C执行Shell\"><a href=\"#C执行Shell\" class=\"headerlink\" title=\"C执行Shell\"></a>C执行Shell</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span><br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-type\">char</span> command[<span class=\"hljs-number\">1000</span>] = <span class=\"hljs-string\">&quot;dir&quot;</span>; <span class=\"hljs-comment\">// 将要执行的 cmd 命令</span><br>    FILE *fp = <span class=\"hljs-literal\">NULL</span>;<br>    <span class=\"hljs-type\">char</span> res[<span class=\"hljs-number\">1024</span>];<br><br>    fp = popen(command, <span class=\"hljs-string\">&quot;r&quot;</span>); <span class=\"hljs-comment\">// 执行命令，并打开读取管道</span><br>     <br>    <span class=\"hljs-keyword\">if</span> (fp == <span class=\"hljs-literal\">NULL</span>) &#123; <span class=\"hljs-comment\">// 判断是否成功打开管道</span><br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;运行命令失败\\n&quot;</span>);<br>        <span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">1</span>);<br>    &#125;<br>     <br>    <span class=\"hljs-keyword\">while</span> (fgets(res, <span class=\"hljs-keyword\">sizeof</span>(res), fp) != <span class=\"hljs-literal\">NULL</span>) &#123; <span class=\"hljs-comment\">// 从管道中读取输出结果</span><br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, res);<br>    &#125;<br>    <br>    pclose(fp); <span class=\"hljs-comment\">// 关闭管道</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这个示例代码将执行 dir 命令，并输出命令的输出结果。可以替换 command 变量的值为需要执行的命令。</p>\n<p>这个实现使用了标准 C 库函数中的 popen() 和 pclose() 函数来执行命令和关闭读取管道。popen() 函数打开一个管道用于读取命令的输出，返回的文件指针 fp 可以用于读取管道中的内容。pclose() 函数关闭读取管道。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C执行Shell\"><a href=\"#C执行Shell\" class=\"headerlink\" title=\"C执行Shell\"></a>C执行Shell</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span><br><br><span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span> &#123;<br>    <span class=\"hljs-type\">char</span> command[<span class=\"hljs-number\">1000</span>] = <span class=\"hljs-string\">&quot;dir&quot;</span>; <span class=\"hljs-comment\">// 将要执行的 cmd 命令</span><br>    FILE *fp = <span class=\"hljs-literal\">NULL</span>;<br>    <span class=\"hljs-type\">char</span> res[<span class=\"hljs-number\">1024</span>];<br><br>    fp = popen(command, <span class=\"hljs-string\">&quot;r&quot;</span>); <span class=\"hljs-comment\">// 执行命令，并打开读取管道</span><br>     <br>    <span class=\"hljs-keyword\">if</span> (fp == <span class=\"hljs-literal\">NULL</span>) &#123; <span class=\"hljs-comment\">// 判断是否成功打开管道</span><br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;运行命令失败\\n&quot;</span>);<br>        <span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">1</span>);<br>    &#125;<br>     <br>    <span class=\"hljs-keyword\">while</span> (fgets(res, <span class=\"hljs-keyword\">sizeof</span>(res), fp) != <span class=\"hljs-literal\">NULL</span>) &#123; <span class=\"hljs-comment\">// 从管道中读取输出结果</span><br>        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, res);<br>    &#125;<br>    <br>    pclose(fp); <span class=\"hljs-comment\">// 关闭管道</span><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这个示例代码将执行 dir 命令，并输出命令的输出结果。可以替换 command 变量的值为需要执行的命令。</p>\n<p>这个实现使用了标准 C 库函数中的 popen() 和 pclose() 函数来执行命令和关闭读取管道。popen() 函数打开一个管道用于读取命令的输出，返回的文件指针 fp 可以用于读取管道中的内容。pclose() 函数关闭读取管道。</p>\n"},{"title":"C++执行Shell","date":"2023-09-09T13:28:17.000Z","_content":"\n# C++执行Shell\n\n代码如下\n\n```c++\n#include <iostream>\n\nint main() {\n    std::string command = \"dir\"; // 将要执行的 cmd 命令(例如ipconfig，ping等)\n    int result = system(command.c_str()); // 执行命令，并获得返回值\n    std::cout << \"Command result: \" << result << std::endl; // 输出返回值\n\n    return 0;\n\n}\n```\n\n示例代码将执行 dir 命令，并输出命令的返回值。\n","source":"_posts/C++执行Shell.md","raw":"---\ntitle: C++执行Shell\ndate: 2023-09-09 21:28:17\ncategories:\n- 各语言执行Shell\ntags:\n- 编程\n---\n\n# C++执行Shell\n\n代码如下\n\n```c++\n#include <iostream>\n\nint main() {\n    std::string command = \"dir\"; // 将要执行的 cmd 命令(例如ipconfig，ping等)\n    int result = system(command.c_str()); // 执行命令，并获得返回值\n    std::cout << \"Command result: \" << result << std::endl; // 输出返回值\n\n    return 0;\n\n}\n```\n\n示例代码将执行 dir 命令，并输出命令的返回值。\n","slug":"C++执行Shell","published":1,"updated":"2023-09-09T13:29:30.786Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmc2cg6200007c5g72fs0hb0","content":"<h1 id=\"C-执行Shell\"><a href=\"#C-执行Shell\" class=\"headerlink\" title=\"C++执行Shell\"></a>C++执行Shell</h1><p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    std::string command = <span class=\"hljs-string\">&quot;dir&quot;</span>; <span class=\"hljs-comment\">// 将要执行的 cmd 命令(例如ipconfig，ping等)</span><br>    <span class=\"hljs-type\">int</span> result = <span class=\"hljs-built_in\">system</span>(command.<span class=\"hljs-built_in\">c_str</span>()); <span class=\"hljs-comment\">// 执行命令，并获得返回值</span><br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Command result: &quot;</span> &lt;&lt; result &lt;&lt; std::endl; <span class=\"hljs-comment\">// 输出返回值</span><br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>示例代码将执行 dir 命令，并输出命令的返回值。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-执行Shell\"><a href=\"#C-执行Shell\" class=\"headerlink\" title=\"C++执行Shell\"></a>C++执行Shell</h1><p>代码如下</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c++\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span><br><br><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    std::string command = <span class=\"hljs-string\">&quot;dir&quot;</span>; <span class=\"hljs-comment\">// 将要执行的 cmd 命令(例如ipconfig，ping等)</span><br>    <span class=\"hljs-type\">int</span> result = <span class=\"hljs-built_in\">system</span>(command.<span class=\"hljs-built_in\">c_str</span>()); <span class=\"hljs-comment\">// 执行命令，并获得返回值</span><br>    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Command result: &quot;</span> &lt;&lt; result &lt;&lt; std::endl; <span class=\"hljs-comment\">// 输出返回值</span><br><br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>示例代码将执行 dir 命令，并输出命令的返回值。</p>\n"},{"title":"Rust执行CMD","date":"2023-09-10T09:39:55.000Z","_content":"\n# Rust执行Shell\n\n使用Cargo创建一个Rust项目。\n\n```rust\nuse std::process::Command;  \n\nfn main() {\n    let _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n}\n```\n\n可以将 .arg(\"pause\") 中的内容替换为其他命令。\n","source":"_posts/Rust执行Shell.md","raw":"---\ntitle: Rust执行CMD\ndate: 2023-09-10 17:39:55\ncategories:\n- 各语言执行Shell\ntags:\n- 编程\n---\n\n# Rust执行Shell\n\n使用Cargo创建一个Rust项目。\n\n```rust\nuse std::process::Command;  \n\nfn main() {\n    let _ = Command::new(\"cmd.exe\").arg(\"/c\").arg(\"pause\").status();\n}\n```\n\n可以将 .arg(\"pause\") 中的内容替换为其他命令。\n","slug":"Rust执行Shell","published":1,"updated":"2023-09-10T09:41:02.644Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmd9mnh700001w5g7wyoc4yl","content":"<h1 id=\"Rust执行Shell\"><a href=\"#Rust执行Shell\" class=\"headerlink\" title=\"Rust执行Shell\"></a>Rust执行Shell</h1><p>使用Cargo创建一个Rust项目。</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs rust\"><span class=\"hljs-keyword\">use</span> std::process::Command;  <br><br><span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() &#123;<br>    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">_</span> = Command::<span class=\"hljs-title function_ invoke__\">new</span>(<span class=\"hljs-string\">&quot;cmd.exe&quot;</span>).<span class=\"hljs-title function_ invoke__\">arg</span>(<span class=\"hljs-string\">&quot;/c&quot;</span>).<span class=\"hljs-title function_ invoke__\">arg</span>(<span class=\"hljs-string\">&quot;pause&quot;</span>).<span class=\"hljs-title function_ invoke__\">status</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>可以将 .arg(“pause”) 中的内容替换为其他命令。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Rust执行Shell\"><a href=\"#Rust执行Shell\" class=\"headerlink\" title=\"Rust执行Shell\"></a>Rust执行Shell</h1><p>使用Cargo创建一个Rust项目。</p>\n<figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs rust\"><span class=\"hljs-keyword\">use</span> std::process::Command;  <br><br><span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() &#123;<br>    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">_</span> = Command::<span class=\"hljs-title function_ invoke__\">new</span>(<span class=\"hljs-string\">&quot;cmd.exe&quot;</span>).<span class=\"hljs-title function_ invoke__\">arg</span>(<span class=\"hljs-string\">&quot;/c&quot;</span>).<span class=\"hljs-title function_ invoke__\">arg</span>(<span class=\"hljs-string\">&quot;pause&quot;</span>).<span class=\"hljs-title function_ invoke__\">status</span>();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>可以将 .arg(“pause”) 中的内容替换为其他命令。</p>\n"},{"title":"C#执行Shell","date":"2023-09-10T09:44:40.000Z","_content":"\n# C#执行Shell\n\n在C#中执行Shell命令有多种方法\n\n## 使用System.Diagnostics.Process类：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"cmd.exe\";\nstartInfo.Arguments = \"/c \" + command; // 如果是使用 PowerShell 命令，则将 \"/c\" 改为 \"/k\"\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用System.Diagnostics.Process类和PowerShell：\n\n```csharp\nstring command = \"Get-Process\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"powershell.exe\";\nstartInfo.Arguments = command;\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：\n\n```csharp\nstring command = \"ipconfig\";\nManagementClass processClass = new ManagementClass(\"Win32_Process\");\nobject[] methodArgs = { command, null, null, 0 };\nobject result = processClass.InvokeMethod(\"Create\", methodArgs);\nint exitCode = Convert.ToInt32(result);\n```\n\n当然，还有其他一些执行Shell命令的方法。以下是其中的两种：\n\n## 使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"cmd.exe\";\nstartInfo.Arguments = \"/c \" + command; // 如果是使用 PowerShell 命令，则将 \"/c\" 改为 \"/k\"\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用Microsoft.VisualBasic.Interaction类：\n\n```csharp\nstring command = \"ipconfig\";\nstring output = Microsoft.VisualBasic.Interaction.Shell(command, AppWinStyle.Hide, true, -1);\n```\n\n## 使用System.Runtime.InteropServices引用DLL文件：\n\n```csharp\nusing System.Runtime.InteropServices;\n\n[DllImport(\"kernel32.dll\", SetLastError = true)]\npublic static extern bool CreateProcess(string lpApplicationName, string lpCommandLine, IntPtr lpProcessAttributes, IntPtr lpThreadAttributes,\n                                        bool bInheritHandles, uint dwCreationFlags, IntPtr lpEnvironment, string lpCurrentDirectory,\n                                        ref STARTUPINFO lpStartupInfo, out PROCESS_INFORMATION lpProcessInformation);\n\n[DllImport(\"kernel32.dll\", SetLastError = true)]\npublic static extern void WaitForSingleObject(IntPtr hHandle, uint dwMilliseconds);\n\nstruct PROCESS_INFORMATION\n{\n    public IntPtr hProcess;\n    public IntPtr hThread;\n    public int dwProcessId;\n    public int dwThreadId;\n}\n\nstruct STARTUPINFO\n{\n    public int cb;\n    public string lpReserved;\n    public string lpDesktop;\n    public string lpTitle;\n    public int dwX;\n    public int dwY;\n    public int dwXSize;\n    public int dwYSize;\n    public int dwXCountChars;\n    public int dwYCountChars;\n    public int dwFillAttribute;\n    public int dwFlags;\n    public short wShowWindow;\n    public short cbReserved2;\n    public IntPtr lpReserved2;\n    public IntPtr hStdInput;\n    public IntPtr hStdOutput;\n    public IntPtr hStdError;\n}\n\nstatic void Main(string[] args)\n{\n    string command = \"ipconfig\";\n    STARTUPINFO startupInfo = new STARTUPINFO();\n    PROCESS_INFORMATION processInfo = new PROCESS_INFORMATION();\n    \n    bool success = CreateProcess(null, command, IntPtr.Zero, IntPtr.Zero, false, 0, IntPtr.Zero, null, ref startupInfo, out processInfo);\n    if (success)\n    {\n        WaitForSingleObject(processInfo.hProcess, 0xFFFFFFFF);\n    }\n}\n```\n\n这种方法使用了Platform Invoke技术，可以直接调用Windows的API函数来执行Shell命令。请注意，使用此方法需要在代码中引用System.Runtime.InteropServices命名空间，并确保正确设置结构体和函数调用。同样地，在执行Shell命令时，需要谨慎处理输入内容和安全问题。\n\n当然，还有一种方法可以执行Shell命令：\n\n## 使用System.Diagnostics.Process类和PowerShell Core：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"pwsh.exe\"; // PowerShell Core的可执行文件路径\nstartInfo.Arguments = \"-Command \" + command;\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n这种方法使用了PowerShell Core的可执行文件（`pwsh.exe`）来执行Shell命令。需要注意，你需要先安装并配置好PowerShell Core，并将其可执行文件的路径正确填写到代码中(或者添加到环境变量中)。\n\n以上是使用C#执行Shell命令的几种常见方法，可以根据具体需求选择适合的方法进行操作。请务必确保输入内容的安全性，并谨慎处理可能存在的风险。\n","source":"_posts/C#执行Shell.md","raw":"---\ntitle: C#执行Shell\ndate: 2023-09-10 17:44:40\ncategories:\n- 各语言执行Shell\ntags:\n- 编程\n---\n\n# C#执行Shell\n\n在C#中执行Shell命令有多种方法\n\n## 使用System.Diagnostics.Process类：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"cmd.exe\";\nstartInfo.Arguments = \"/c \" + command; // 如果是使用 PowerShell 命令，则将 \"/c\" 改为 \"/k\"\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用System.Diagnostics.Process类和PowerShell：\n\n```csharp\nstring command = \"Get-Process\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"powershell.exe\";\nstartInfo.Arguments = command;\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：\n\n```csharp\nstring command = \"ipconfig\";\nManagementClass processClass = new ManagementClass(\"Win32_Process\");\nobject[] methodArgs = { command, null, null, 0 };\nobject result = processClass.InvokeMethod(\"Create\", methodArgs);\nint exitCode = Convert.ToInt32(result);\n```\n\n当然，还有其他一些执行Shell命令的方法。以下是其中的两种：\n\n## 使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"cmd.exe\";\nstartInfo.Arguments = \"/c \" + command; // 如果是使用 PowerShell 命令，则将 \"/c\" 改为 \"/k\"\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n## 使用Microsoft.VisualBasic.Interaction类：\n\n```csharp\nstring command = \"ipconfig\";\nstring output = Microsoft.VisualBasic.Interaction.Shell(command, AppWinStyle.Hide, true, -1);\n```\n\n## 使用System.Runtime.InteropServices引用DLL文件：\n\n```csharp\nusing System.Runtime.InteropServices;\n\n[DllImport(\"kernel32.dll\", SetLastError = true)]\npublic static extern bool CreateProcess(string lpApplicationName, string lpCommandLine, IntPtr lpProcessAttributes, IntPtr lpThreadAttributes,\n                                        bool bInheritHandles, uint dwCreationFlags, IntPtr lpEnvironment, string lpCurrentDirectory,\n                                        ref STARTUPINFO lpStartupInfo, out PROCESS_INFORMATION lpProcessInformation);\n\n[DllImport(\"kernel32.dll\", SetLastError = true)]\npublic static extern void WaitForSingleObject(IntPtr hHandle, uint dwMilliseconds);\n\nstruct PROCESS_INFORMATION\n{\n    public IntPtr hProcess;\n    public IntPtr hThread;\n    public int dwProcessId;\n    public int dwThreadId;\n}\n\nstruct STARTUPINFO\n{\n    public int cb;\n    public string lpReserved;\n    public string lpDesktop;\n    public string lpTitle;\n    public int dwX;\n    public int dwY;\n    public int dwXSize;\n    public int dwYSize;\n    public int dwXCountChars;\n    public int dwYCountChars;\n    public int dwFillAttribute;\n    public int dwFlags;\n    public short wShowWindow;\n    public short cbReserved2;\n    public IntPtr lpReserved2;\n    public IntPtr hStdInput;\n    public IntPtr hStdOutput;\n    public IntPtr hStdError;\n}\n\nstatic void Main(string[] args)\n{\n    string command = \"ipconfig\";\n    STARTUPINFO startupInfo = new STARTUPINFO();\n    PROCESS_INFORMATION processInfo = new PROCESS_INFORMATION();\n    \n    bool success = CreateProcess(null, command, IntPtr.Zero, IntPtr.Zero, false, 0, IntPtr.Zero, null, ref startupInfo, out processInfo);\n    if (success)\n    {\n        WaitForSingleObject(processInfo.hProcess, 0xFFFFFFFF);\n    }\n}\n```\n\n这种方法使用了Platform Invoke技术，可以直接调用Windows的API函数来执行Shell命令。请注意，使用此方法需要在代码中引用System.Runtime.InteropServices命名空间，并确保正确设置结构体和函数调用。同样地，在执行Shell命令时，需要谨慎处理输入内容和安全问题。\n\n当然，还有一种方法可以执行Shell命令：\n\n## 使用System.Diagnostics.Process类和PowerShell Core：\n\n```csharp\nstring command = \"ipconfig\";\nProcess process = new Process();\nProcessStartInfo startInfo = new ProcessStartInfo();\nstartInfo.FileName = \"pwsh.exe\"; // PowerShell Core的可执行文件路径\nstartInfo.Arguments = \"-Command \" + command;\nstartInfo.RedirectStandardOutput = true;\nstartInfo.UseShellExecute = false;\nstartInfo.CreateNoWindow = true;\n\nprocess.StartInfo = startInfo;\nprocess.Start();\n\nstring output = process.StandardOutput.ReadToEnd();\n\nprocess.WaitForExit();\n```\n\n这种方法使用了PowerShell Core的可执行文件（`pwsh.exe`）来执行Shell命令。需要注意，你需要先安装并配置好PowerShell Core，并将其可执行文件的路径正确填写到代码中(或者添加到环境变量中)。\n\n以上是使用C#执行Shell命令的几种常见方法，可以根据具体需求选择适合的方法进行操作。请务必确保输入内容的安全性，并谨慎处理可能存在的风险。\n","slug":"C#执行Shell","published":1,"updated":"2023-09-10T09:51:05.194Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmd9z4r10000vk5ge9z3g572","content":"<h1 id=\"C-执行Shell\"><a href=\"#C-执行Shell\" class=\"headerlink\" title=\"C#执行Shell\"></a>C#执行Shell</h1><p>在C#中执行Shell命令有多种方法</p>\n<h2 id=\"使用System-Diagnostics-Process类：\"><a href=\"#使用System-Diagnostics-Process类：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类：\"></a>使用System.Diagnostics.Process类：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;cmd.exe&quot;</span>;<br>startInfo.Arguments = <span class=\"hljs-string\">&quot;/c &quot;</span> + command; <span class=\"hljs-comment\">// 如果是使用 PowerShell 命令，则将 &quot;/c&quot; 改为 &quot;/k&quot;</span><br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Diagnostics-Process类和PowerShell：\"><a href=\"#使用System-Diagnostics-Process类和PowerShell：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和PowerShell：\"></a>使用System.Diagnostics.Process类和PowerShell：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;Get-Process&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;powershell.exe&quot;</span>;<br>startInfo.Arguments = command;<br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Management命名空间的ManagementObject类（需要引用System-Management-dll）：\"><a href=\"#使用System-Management命名空间的ManagementObject类（需要引用System-Management-dll）：\" class=\"headerlink\" title=\"使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：\"></a>使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>ManagementClass processClass = <span class=\"hljs-keyword\">new</span> ManagementClass(<span class=\"hljs-string\">&quot;Win32_Process&quot;</span>);<br><span class=\"hljs-built_in\">object</span>[] methodArgs = &#123; command, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">0</span> &#125;;<br><span class=\"hljs-built_in\">object</span> result = processClass.InvokeMethod(<span class=\"hljs-string\">&quot;Create&quot;</span>, methodArgs);<br><span class=\"hljs-built_in\">int</span> exitCode = Convert.ToInt32(result);<br></code></pre></td></tr></table></figure>\n\n<p>当然，还有其他一些执行Shell命令的方法。以下是其中的两种：</p>\n<h2 id=\"使用System-Diagnostics-Process类和WMI（Windows-Management-Instrumentation）：\"><a href=\"#使用System-Diagnostics-Process类和WMI（Windows-Management-Instrumentation）：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：\"></a>使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;cmd.exe&quot;</span>;<br>startInfo.Arguments = <span class=\"hljs-string\">&quot;/c &quot;</span> + command; <span class=\"hljs-comment\">// 如果是使用 PowerShell 命令，则将 &quot;/c&quot; 改为 &quot;/k&quot;</span><br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用Microsoft-VisualBasic-Interaction类：\"><a href=\"#使用Microsoft-VisualBasic-Interaction类：\" class=\"headerlink\" title=\"使用Microsoft.VisualBasic.Interaction类：\"></a>使用Microsoft.VisualBasic.Interaction类：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br><span class=\"hljs-built_in\">string</span> output = Microsoft.VisualBasic.Interaction.Shell(command, AppWinStyle.Hide, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">-1</span>);<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Runtime-InteropServices引用DLL文件：\"><a href=\"#使用System-Runtime-InteropServices引用DLL文件：\" class=\"headerlink\" title=\"使用System.Runtime.InteropServices引用DLL文件：\"></a>使用System.Runtime.InteropServices引用DLL文件：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Runtime.InteropServices;<br><br>[<span class=\"hljs-meta\">DllImport(<span class=\"hljs-string\">&quot;kernel32.dll&quot;</span>, SetLastError = true)</span>]<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">extern</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">CreateProcess</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> lpApplicationName, <span class=\"hljs-built_in\">string</span> lpCommandLine, IntPtr lpProcessAttributes, IntPtr lpThreadAttributes,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                                        <span class=\"hljs-built_in\">bool</span> bInheritHandles, <span class=\"hljs-built_in\">uint</span> dwCreationFlags, IntPtr lpEnvironment, <span class=\"hljs-built_in\">string</span> lpCurrentDirectory,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                                        <span class=\"hljs-keyword\">ref</span> STARTUPINFO lpStartupInfo, <span class=\"hljs-keyword\">out</span> PROCESS_INFORMATION lpProcessInformation</span>)</span>;<br><br>[<span class=\"hljs-meta\">DllImport(<span class=\"hljs-string\">&quot;kernel32.dll&quot;</span>, SetLastError = true)</span>]<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">extern</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">WaitForSingleObject</span>(<span class=\"hljs-params\">IntPtr hHandle, <span class=\"hljs-built_in\">uint</span> dwMilliseconds</span>)</span>;<br><br><span class=\"hljs-keyword\">struct</span> PROCESS_INFORMATION<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hProcess;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hThread;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwProcessId;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwThreadId;<br>&#125;<br><br><span class=\"hljs-keyword\">struct</span> STARTUPINFO<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> cb;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpReserved;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpDesktop;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpTitle;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwX;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwY;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwXSize;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwYSize;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwXCountChars;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwYCountChars;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwFillAttribute;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwFlags;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">short</span> wShowWindow;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">short</span> cbReserved2;<br>    <span class=\"hljs-keyword\">public</span> IntPtr lpReserved2;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdInput;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdOutput;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdError;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Main</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span>[] args</span>)</span><br>&#123;<br>    <span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>    STARTUPINFO startupInfo = <span class=\"hljs-keyword\">new</span> STARTUPINFO();<br>    PROCESS_INFORMATION processInfo = <span class=\"hljs-keyword\">new</span> PROCESS_INFORMATION();<br>    <br>    <span class=\"hljs-built_in\">bool</span> success = CreateProcess(<span class=\"hljs-literal\">null</span>, command, IntPtr.Zero, IntPtr.Zero, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">0</span>, IntPtr.Zero, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-keyword\">ref</span> startupInfo, <span class=\"hljs-keyword\">out</span> processInfo);<br>    <span class=\"hljs-keyword\">if</span> (success)<br>    &#123;<br>        WaitForSingleObject(processInfo.hProcess, <span class=\"hljs-number\">0xFFFFFFFF</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这种方法使用了Platform Invoke技术，可以直接调用Windows的API函数来执行Shell命令。请注意，使用此方法需要在代码中引用System.Runtime.InteropServices命名空间，并确保正确设置结构体和函数调用。同样地，在执行Shell命令时，需要谨慎处理输入内容和安全问题。</p>\n<p>当然，还有一种方法可以执行Shell命令：</p>\n<h2 id=\"使用System-Diagnostics-Process类和PowerShell-Core：\"><a href=\"#使用System-Diagnostics-Process类和PowerShell-Core：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和PowerShell Core：\"></a>使用System.Diagnostics.Process类和PowerShell Core：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;pwsh.exe&quot;</span>; <span class=\"hljs-comment\">// PowerShell Core的可执行文件路径</span><br>startInfo.Arguments = <span class=\"hljs-string\">&quot;-Command &quot;</span> + command;<br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<p>这种方法使用了PowerShell Core的可执行文件（<code>pwsh.exe</code>）来执行Shell命令。需要注意，你需要先安装并配置好PowerShell Core，并将其可执行文件的路径正确填写到代码中(或者添加到环境变量中)。</p>\n<p>以上是使用C#执行Shell命令的几种常见方法，可以根据具体需求选择适合的方法进行操作。请务必确保输入内容的安全性，并谨慎处理可能存在的风险。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-执行Shell\"><a href=\"#C-执行Shell\" class=\"headerlink\" title=\"C#执行Shell\"></a>C#执行Shell</h1><p>在C#中执行Shell命令有多种方法</p>\n<h2 id=\"使用System-Diagnostics-Process类：\"><a href=\"#使用System-Diagnostics-Process类：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类：\"></a>使用System.Diagnostics.Process类：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;cmd.exe&quot;</span>;<br>startInfo.Arguments = <span class=\"hljs-string\">&quot;/c &quot;</span> + command; <span class=\"hljs-comment\">// 如果是使用 PowerShell 命令，则将 &quot;/c&quot; 改为 &quot;/k&quot;</span><br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Diagnostics-Process类和PowerShell：\"><a href=\"#使用System-Diagnostics-Process类和PowerShell：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和PowerShell：\"></a>使用System.Diagnostics.Process类和PowerShell：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;Get-Process&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;powershell.exe&quot;</span>;<br>startInfo.Arguments = command;<br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Management命名空间的ManagementObject类（需要引用System-Management-dll）：\"><a href=\"#使用System-Management命名空间的ManagementObject类（需要引用System-Management-dll）：\" class=\"headerlink\" title=\"使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：\"></a>使用System.Management命名空间的ManagementObject类（需要引用System.Management.dll）：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>ManagementClass processClass = <span class=\"hljs-keyword\">new</span> ManagementClass(<span class=\"hljs-string\">&quot;Win32_Process&quot;</span>);<br><span class=\"hljs-built_in\">object</span>[] methodArgs = &#123; command, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">0</span> &#125;;<br><span class=\"hljs-built_in\">object</span> result = processClass.InvokeMethod(<span class=\"hljs-string\">&quot;Create&quot;</span>, methodArgs);<br><span class=\"hljs-built_in\">int</span> exitCode = Convert.ToInt32(result);<br></code></pre></td></tr></table></figure>\n\n<p>当然，还有其他一些执行Shell命令的方法。以下是其中的两种：</p>\n<h2 id=\"使用System-Diagnostics-Process类和WMI（Windows-Management-Instrumentation）：\"><a href=\"#使用System-Diagnostics-Process类和WMI（Windows-Management-Instrumentation）：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：\"></a>使用System.Diagnostics.Process类和WMI（Windows Management Instrumentation）：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;cmd.exe&quot;</span>;<br>startInfo.Arguments = <span class=\"hljs-string\">&quot;/c &quot;</span> + command; <span class=\"hljs-comment\">// 如果是使用 PowerShell 命令，则将 &quot;/c&quot; 改为 &quot;/k&quot;</span><br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用Microsoft-VisualBasic-Interaction类：\"><a href=\"#使用Microsoft-VisualBasic-Interaction类：\" class=\"headerlink\" title=\"使用Microsoft.VisualBasic.Interaction类：\"></a>使用Microsoft.VisualBasic.Interaction类：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br><span class=\"hljs-built_in\">string</span> output = Microsoft.VisualBasic.Interaction.Shell(command, AppWinStyle.Hide, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">-1</span>);<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"使用System-Runtime-InteropServices引用DLL文件：\"><a href=\"#使用System-Runtime-InteropServices引用DLL文件：\" class=\"headerlink\" title=\"使用System.Runtime.InteropServices引用DLL文件：\"></a>使用System.Runtime.InteropServices引用DLL文件：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Runtime.InteropServices;<br><br>[<span class=\"hljs-meta\">DllImport(<span class=\"hljs-string\">&quot;kernel32.dll&quot;</span>, SetLastError = true)</span>]<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">extern</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">CreateProcess</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> lpApplicationName, <span class=\"hljs-built_in\">string</span> lpCommandLine, IntPtr lpProcessAttributes, IntPtr lpThreadAttributes,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                                        <span class=\"hljs-built_in\">bool</span> bInheritHandles, <span class=\"hljs-built_in\">uint</span> dwCreationFlags, IntPtr lpEnvironment, <span class=\"hljs-built_in\">string</span> lpCurrentDirectory,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                                        <span class=\"hljs-keyword\">ref</span> STARTUPINFO lpStartupInfo, <span class=\"hljs-keyword\">out</span> PROCESS_INFORMATION lpProcessInformation</span>)</span>;<br><br>[<span class=\"hljs-meta\">DllImport(<span class=\"hljs-string\">&quot;kernel32.dll&quot;</span>, SetLastError = true)</span>]<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">extern</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">WaitForSingleObject</span>(<span class=\"hljs-params\">IntPtr hHandle, <span class=\"hljs-built_in\">uint</span> dwMilliseconds</span>)</span>;<br><br><span class=\"hljs-keyword\">struct</span> PROCESS_INFORMATION<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hProcess;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hThread;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwProcessId;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwThreadId;<br>&#125;<br><br><span class=\"hljs-keyword\">struct</span> STARTUPINFO<br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> cb;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpReserved;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpDesktop;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> lpTitle;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwX;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwY;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwXSize;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwYSize;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwXCountChars;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwYCountChars;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwFillAttribute;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> dwFlags;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">short</span> wShowWindow;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">short</span> cbReserved2;<br>    <span class=\"hljs-keyword\">public</span> IntPtr lpReserved2;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdInput;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdOutput;<br>    <span class=\"hljs-keyword\">public</span> IntPtr hStdError;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Main</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span>[] args</span>)</span><br>&#123;<br>    <span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>    STARTUPINFO startupInfo = <span class=\"hljs-keyword\">new</span> STARTUPINFO();<br>    PROCESS_INFORMATION processInfo = <span class=\"hljs-keyword\">new</span> PROCESS_INFORMATION();<br>    <br>    <span class=\"hljs-built_in\">bool</span> success = CreateProcess(<span class=\"hljs-literal\">null</span>, command, IntPtr.Zero, IntPtr.Zero, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">0</span>, IntPtr.Zero, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-keyword\">ref</span> startupInfo, <span class=\"hljs-keyword\">out</span> processInfo);<br>    <span class=\"hljs-keyword\">if</span> (success)<br>    &#123;<br>        WaitForSingleObject(processInfo.hProcess, <span class=\"hljs-number\">0xFFFFFFFF</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>这种方法使用了Platform Invoke技术，可以直接调用Windows的API函数来执行Shell命令。请注意，使用此方法需要在代码中引用System.Runtime.InteropServices命名空间，并确保正确设置结构体和函数调用。同样地，在执行Shell命令时，需要谨慎处理输入内容和安全问题。</p>\n<p>当然，还有一种方法可以执行Shell命令：</p>\n<h2 id=\"使用System-Diagnostics-Process类和PowerShell-Core：\"><a href=\"#使用System-Diagnostics-Process类和PowerShell-Core：\" class=\"headerlink\" title=\"使用System.Diagnostics.Process类和PowerShell Core：\"></a>使用System.Diagnostics.Process类和PowerShell Core：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-built_in\">string</span> command = <span class=\"hljs-string\">&quot;ipconfig&quot;</span>;<br>Process process = <span class=\"hljs-keyword\">new</span> Process();<br>ProcessStartInfo startInfo = <span class=\"hljs-keyword\">new</span> ProcessStartInfo();<br>startInfo.FileName = <span class=\"hljs-string\">&quot;pwsh.exe&quot;</span>; <span class=\"hljs-comment\">// PowerShell Core的可执行文件路径</span><br>startInfo.Arguments = <span class=\"hljs-string\">&quot;-Command &quot;</span> + command;<br>startInfo.RedirectStandardOutput = <span class=\"hljs-literal\">true</span>;<br>startInfo.UseShellExecute = <span class=\"hljs-literal\">false</span>;<br>startInfo.CreateNoWindow = <span class=\"hljs-literal\">true</span>;<br><br>process.StartInfo = startInfo;<br>process.Start();<br><br><span class=\"hljs-built_in\">string</span> output = process.StandardOutput.ReadToEnd();<br><br>process.WaitForExit();<br></code></pre></td></tr></table></figure>\n\n<p>这种方法使用了PowerShell Core的可执行文件（<code>pwsh.exe</code>）来执行Shell命令。需要注意，你需要先安装并配置好PowerShell Core，并将其可执行文件的路径正确填写到代码中(或者添加到环境变量中)。</p>\n<p>以上是使用C#执行Shell命令的几种常见方法，可以根据具体需求选择适合的方法进行操作。请务必确保输入内容的安全性，并谨慎处理可能存在的风险。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clma1hhtg0000qk5g6pq5amt7","category_id":"clma2lvt80000jk5gf9lg3c1i","_id":"clma2lvt90003jk5gdakhd5yd"},{"post_id":"clmc1mnfd0000jk5g9x270cvu","category_id":"clmc1mnfh0001jk5g20xt7b9r","_id":"clmc1mnfi0004jk5g62ns9t2n"},{"post_id":"clmc256tt00008o5gdr5a87v4","category_id":"clmc1mnfh0001jk5g20xt7b9r","_id":"clmc256tx00028o5gba08hkee"},{"post_id":"clmc2cg6200007c5g72fs0hb0","category_id":"clmc1mnfh0001jk5g20xt7b9r","_id":"clmc2cg6600027c5ghgli4x08"},{"post_id":"clmd9mnh700001w5g7wyoc4yl","category_id":"clmc1mnfh0001jk5g20xt7b9r","_id":"clmd9mnha00021w5ghx040w0p"},{"post_id":"clmd9z4r10000vk5ge9z3g572","category_id":"clmc1mnfh0001jk5g20xt7b9r","_id":"clmd9z4r40002vk5gghr20xcv"}],"PostTag":[{"post_id":"clma1hhtg0000qk5g6pq5amt7","tag_id":"clma2lvt80001jk5g1cwc44kv","_id":"clma2lvt90002jk5gggsld608"},{"post_id":"clmc1mnfd0000jk5g9x270cvu","tag_id":"clmc1mnfi0002jk5gh1wzeh96","_id":"clmc1mnfi0003jk5ghs729tte"},{"post_id":"clmc256tt00008o5gdr5a87v4","tag_id":"clmc1mnfi0002jk5gh1wzeh96","_id":"clmc256tx00018o5ggwl1frj3"},{"post_id":"clmc2cg6200007c5g72fs0hb0","tag_id":"clmc1mnfi0002jk5gh1wzeh96","_id":"clmc2cg6600017c5g3lmdg291"},{"post_id":"clmd9mnh700001w5g7wyoc4yl","tag_id":"clmc1mnfi0002jk5gh1wzeh96","_id":"clmd9mnha00011w5g9efx85jk"},{"post_id":"clmd9z4r10000vk5ge9z3g572","tag_id":"clmc1mnfi0002jk5gh1wzeh96","_id":"clmd9z4r40001vk5g59me7mvc"}],"Tag":[{"name":"餐饮","_id":"clma2lvt80001jk5g1cwc44kv"},{"name":"编程","_id":"clmc1mnfi0002jk5gh1wzeh96"}]}}